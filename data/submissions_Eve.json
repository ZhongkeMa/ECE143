{
  "submissions_dump": [
    {
      "id": 229446159,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558064534,
      "status_display": "Accepted",
      "runtime": "3 ms",
      "url": "/submissions/detail/229446159/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "35 MB",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int eflag = 0;\n        int dotflag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1 && eflag!=1){\n                    eflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos && i!=strTrim.length()-1){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=currentPos && i!=strTrim.length()-1  && dotflag!=1 && eflag!=1){\n                 if(Character.isDigit(strTrim.charAt(i-1)) && (Character.isDigit(strTrim.charAt(i+1)) || strTrim.charAt(i+1) == 'e')){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            } else if(strTrim.charAt(i) == '.' && i==currentPos && dotflag!=1 && eflag!=1){\n                   if(i+1 < strTrim.length() && Character.isDigit(strTrim.charAt(i+1))){\n                        dotflag = 1;\n                        continue;\n                    } else{\n                        return false;\n                    }\n                }\n            else if(strTrim.charAt(i) == '.' && i==strTrim.length()-1 && dotflag!=1 && eflag!=1){\n                if(Character.isDigit(strTrim.charAt(i-1))){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229446058,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558064500,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/229446058/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int eflag = 0;\n        int dotflag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1 && eflag!=1){\n                    eflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos && i!=strTrim.length()-1){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=currentPos && i!=strTrim.length()-1  && dotflag!=1 && eflag!=1){\n                 if(Character.isDigit(strTrim.charAt(i-1)) && (Character.isDigit(strTrim.charAt(i+1)) || strTrim.charAt(i+1) == 'e')){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            } else if(strTrim.charAt(i) == '.' && i==currentPos && dotflag!=1){\n                   if(i+1 < strTrim.length() && Character.isDigit(strTrim.charAt(i+1))){\n                        dotflag = 1;\n                        continue;\n                    } else{\n                        return false;\n                    }\n                }\n            else if(strTrim.charAt(i) == '.' && i==strTrim.length()-1 && dotflag!=1){\n                if(Character.isDigit(strTrim.charAt(i-1))){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    },
    {
      "id": 229445904,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558064456,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/229445904/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int eflag = 0;\n        int dotflag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    eflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos && i!=strTrim.length()-1){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=currentPos && i!=strTrim.length()-1  && dotflag!=1 && eflag!=1){\n                 if(Character.isDigit(strTrim.charAt(i-1)) && (Character.isDigit(strTrim.charAt(i+1)) || strTrim.charAt(i+1) == 'e')){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            } else if(strTrim.charAt(i) == '.' && i==currentPos && dotflag!=1){\n                   if(i+1 < strTrim.length() && Character.isDigit(strTrim.charAt(i+1))){\n                        dotflag = 1;\n                        continue;\n                    } else{\n                        return false;\n                    }\n                }\n            else if(strTrim.charAt(i) == '.' && i==strTrim.length()-1 && dotflag!=1){\n                if(Character.isDigit(strTrim.charAt(i-1))){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229445562,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558064366,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/229445562/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int eflag = 0;\n        int dotflag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    eflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos && i!=strTrim.length()-1){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=currentPos && i!=strTrim.length()-1  && dotflag!=1 && eflag!=1){\n                 if(Character.isDigit(strTrim.charAt(i-1)) && Character.isDigit(strTrim.charAt(i+1))){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            } else if(strTrim.charAt(i) == '.' && i==currentPos && dotflag!=1){\n                   if(i+1 < strTrim.length() && Character.isDigit(strTrim.charAt(i+1))){\n                        dotflag = 1;\n                        continue;\n                    } else{\n                        return false;\n                    }\n                }\n            else if(strTrim.charAt(i) == '.' && i==strTrim.length()-1 && dotflag!=1){\n                if(Character.isDigit(strTrim.charAt(i-1))){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229445414,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558064321,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/229445414/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int eflag = 0;\n        int dotflag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    eflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=currentPos && i!=strTrim.length()-1  && dotflag!=1 && eflag!=1){\n                 if(Character.isDigit(strTrim.charAt(i-1)) && Character.isDigit(strTrim.charAt(i+1))){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            } else if(strTrim.charAt(i) == '.' && i==currentPos && dotflag!=1){\n                   if(i+1 < strTrim.length() && Character.isDigit(strTrim.charAt(i+1))){\n                        dotflag = 1;\n                        continue;\n                    } else{\n                        return false;\n                    }\n                }\n            else if(strTrim.charAt(i) == '.' && i==strTrim.length()-1 && dotflag!=1){\n                if(Character.isDigit(strTrim.charAt(i-1))){\n                    dotflag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229444745,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558064143,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/229444745/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int flag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    flag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=currentPos && i!=strTrim.length()-1){\n                 if(Character.isDigit(strTrim.charAt(i-1)) && Character.isDigit(strTrim.charAt(i+1)) && flag!=1){\n                    continue;\n                } else{\n                    return false;\n                }\n            } else if(strTrim.charAt(i) == '.' && i==currentPos){\n                   if(i+1 < strTrim.length() && Character.isDigit(strTrim.charAt(i+1))){\n                        continue;\n                    } else{\n                        return false;\n                    }\n                }\n            else if(strTrim.charAt(i) == '.' && i==strTrim.length()-1){\n                if(Character.isDigit(strTrim.charAt(i-1))){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229444110,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558063958,
      "status_display": "Runtime Error",
      "runtime": "N/A",
      "url": "/submissions/detail/229444110/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int flag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    flag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=strTrim.length()-1){\n                if(i==currentPos && Character.isDigit(strTrim.charAt(i+1))){\n                    continue;\n                }\n                else if(i!=currentPos && Character.isDigit(strTrim.charAt(i-1)) && Character.isDigit(strTrim.charAt(i+1)) && flag!=1){\n                    continue;\n                } else{\n                    return false;\n                }\n            } \n            else if(strTrim.charAt(i) == '.' && i==strTrim.length()-1){\n                if(Character.isDigit(strTrim.charAt(i-1))){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229443674,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558063842,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/229443674/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int flag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    flag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=strTrim.length()-1){\n                if(i==currentPos && Character.isDigit(strTrim.charAt(i+1))){\n                    continue;\n                }\n                else if(i!=currentPos && Character.isDigit(strTrim.charAt(i-1)) && Character.isDigit(strTrim.charAt(i+1)) && flag!=1){\n                    continue;\n                } else{\n                    return false;\n                }\n            } \n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229443473,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558063787,
      "status_display": "Runtime Error",
      "runtime": "N/A",
      "url": "/submissions/detail/229443473/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int flag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    flag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=strTrim.length()-1){\n                if(i==currentPos && Character.isDigit(strTrim.charAt(i+1))){\n                    continue;\n                }\n                else if(Character.isDigit(strTrim.charAt(i-1)) && Character.isDigit(strTrim.charAt(i+1)) && flag!=1){\n                    continue;\n                } else{\n                    return false;\n                }\n            } \n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229443162,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558063695,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/229443162/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.length() == 0){\n            return false;\n        }\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int flag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    flag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=currentPos && i!=strTrim.length()-1){\n                if(Character.isDigit(strTrim.charAt(i-1)) && Character.isDigit(strTrim.charAt(i+1)) && flag!=1){\n                    continue;\n                } else{\n                    return false;\n                }\n            } \n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229443082,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558063673,
      "status_display": "Runtime Error",
      "runtime": "N/A",
      "url": "/submissions/detail/229443082/",
      "is_pending": "Not Pending",
      "title": "Valid Number",
      "memory": "N/A",
      "code": "class Solution {\n    public boolean isNumber(String s) {\n        String strTrim = s.trim();\n        int currentPos = 0;\n        int sign = 1;\n        if(strTrim.charAt(0) == '+' || strTrim.charAt(0) == '-'){\n            currentPos = 1;\n            if(strTrim.charAt(0) == '-'){\n                sign = -1;\n            }\n        }\n        int flag = 0;\n        for(int i=currentPos;i<strTrim.length();i++){\n            if(Character.isLetter(strTrim.charAt(i))){\n                if(strTrim.charAt(i) == 'e' && i!=currentPos && i!=strTrim.length()-1){\n                    flag = 1;\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if((strTrim.charAt(i) == '-' || strTrim.charAt(i) == '+') && i!=currentPos){\n                if(strTrim.charAt(i-1) == 'e'){\n                    continue;\n                } else{\n                    return false;\n                }\n            }\n            else if(strTrim.charAt(i) == '.' && i!=currentPos && i!=strTrim.length()-1){\n                if(Character.isDigit(strTrim.charAt(i-1)) && Character.isDigit(strTrim.charAt(i+1)) && flag!=1){\n                    continue;\n                } else{\n                    return false;\n                }\n            } \n            else if(Character.isDigit(strTrim.charAt(i))){\n                continue;\n            } else{\n                return false;\n            }\n        }\n        return true;\n        \n    }\n}",
      "compare_result
    },
    {
      "id": 229437260,
      "lang": "java",
      "time": "1\u00a0week, 5\u00a0days",
      "timestamp": 1558062095,
      "status_display": "Accepted",
      "runtime": "2 ms",
      "url": "/submissions/detail/229437260/",
      "is_pending": "Not Pending",
      "title": "Two Sum",
      "memory": "37.2 MB",
      "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map<Integer, Integer> map = new HashMap<>();\n        \n        for(int i=0;i<nums.length;i++){\n            int complement = target - nums[i];\n            if(map.containsKey(complement)){\n                return new int[]{map.get(complement), i};\n            }\n            map.put(nums[i],i);\n        }\n        return null;\n    }\n}",
      "compare_result": "11111111111111111111111111111"
    },
    {
      "id": 228332131,
      "lang": "java",
      "time": "2\u00a0weeks, 3\u00a0days",
      "timestamp": 1557632934,
      "status_display": "Accepted",
      "runtime": "2 ms",
      "url": "/submissions/detail/228332131/",
      "is_pending": "Not Pending",
      "title": "Median of Two Sorted Arrays",
      "memory": "41 MB",
      "code": "class Solution {\n    public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n        /*\n            a[0] a[1].... a[i-1] | a[i].... a[m]\n            b[0] b[1]..... b[j-1] | b[j] .... b[n]\n        */\n        \n        int m = nums1.length;\n        int n = nums2.length;\n        \n        if(m > n){\n            int[] temp = nums1;\n            nums1 = nums2;\n            nums2 = temp;\n        }\n        \n        m = nums1.length;\n        n = nums2.length;\n        \n        int iMin = 0, iMax = m, halflen = (m+n+1)/2;\n        \n        while(iMin <= iMax){\n            int i = (iMin + iMax)/2;\n            int j = halflen - i;\n            \n            if(i < iMax && nums2[j-1] > nums1[i]){\n                iMin = i + 1;\n            }\n            else if(i > iMin && nums1[i-1] > nums2[j]){\n                iMax = i - 1;\n            }\n            else{\n                \n                int maxLeft = 0;\n                if( i == 0) \n                    maxLeft = nums2[j-1];\n                else if(j == 0)\n                    maxLeft = nums1[i-1];\n                else\n                    maxLeft = Math.max(nums1[i-1],nums2[j-1]);\n                \n                if((m+n) % 2 == 1) \n                    return maxLeft;\n                \n                int minRight = 0;\n                if(i==m)\n                    minRight = nums2[j];\n                else if(j==n)\n                    minRight = nums1[i];\n                else\n                    minRight = Math.min(nums1[i], nums2[j]);\n                \n                return (maxLeft + minRight)/2.0;\n            }\n            \n        }\n       return 0.0; \n    }\n}",
      "compare_result
    },
    {
      "id": 228308452,
      "lang": "java",
      "time": "2\u00a0weeks, 3\u00a0days",
      "timestamp": 1557627744,
      "status_display": "Accepted",
      "runtime": "6 ms",
      "url": "/submissions/detail/228308452/",
      "is_pending": "Not Pending",
      "title": "Palindrome Number",
      "memory": "35.5 MB",
      "code": "class Solution {\n    public boolean isPalindrome(int x) {\n        if(x < 0 || (x%10==0 && x!=0)){\n            return false;\n        }\n        \n        int rev = 0;\n        while(x > rev){\n            int num = x%10;\n            x = x/10;\n            rev = rev*10 + num;\n        }\n        \n        return x == rev || x==rev/10;\n    }\n}",
      "compare_result
    },
    {
      "id": 228307514,
      "lang": "java",
      "time": "2\u00a0weeks, 3\u00a0days",
      "timestamp": 1557627422,
      "status_display": "Accepted",
      "runtime": "1 ms",
      "url": "/submissions/detail/228307514/",
      "is_pending": "Not Pending",
      "title": "String to Integer (atoi)",
      "memory": "35 MB",
      "code": "class Solution {\n    public int myAtoi(String str) {\n        String strTrim = str.trim();\n        if(strTrim.length() == 0){\n            return 0;\n        }\n        \n        int sign = 1;\n        int index = 0;\n        long result = 0;\n        if(strTrim.charAt(index) == '-' || strTrim.charAt(index) == '+'){\n            sign = strTrim.charAt(index) == '-'?-1:1;\n            index++;\n        }\n        \n        while(index < strTrim.length()){\n            int digit = strTrim.charAt(index) - '0';\n            if(digit < 0 || digit > 9){\n                break;\n            }\n            result = result*10 + digit;\n            if(result > Integer.MAX_VALUE){\n                if(sign == 1)\n                    return Integer.MAX_VALUE;\n                else\n                    return Integer.MIN_VALUE;\n            }\n            index++;\n        }\n        \n        return (int)(result*sign);\n    }\n}",
      "compare_result
    },
    {
      "id": 228307365,
      "lang": "java",
      "time": "2\u00a0weeks, 3\u00a0days",
      "timestamp": 1557627365,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/228307365/",
      "is_pending": "Not Pending",
      "title": "String to Integer (atoi)",
      "memory": "N/A",
      "code": "class Solution {\n    public int myAtoi(String str) {\n        String strTrim = str.trim();\n        if(strTrim.length() == 0){\n            return 0;\n        }\n        \n        int sign = 1;\n        int index = 0;\n        long result = 0;\n        if(str.charAt(index) == '-' || str.charAt(index) == '+'){\n            sign = str.charAt(index) == '-'?1:-1;\n            index++;\n        }\n        \n        while(index < strTrim.length()){\n            int digit = strTrim.charAt(index) - '0';\n            if(digit < 0 || digit > 9){\n                break;\n            }\n            result = result*10 + digit;\n            if(result > Integer.MAX_VALUE){\n                if(sign == 1)\n                    return Integer.MAX_VALUE;\n                else\n                    return Integer.MIN_VALUE;\n            }\n            index++;\n        }\n        \n        return (int)(result*sign);\n    }\n}",
      "compare_result": "10110111111001110011111101111000101110011001010111111110001011010111011110000001111101000010000001100001110010011110010100111011101111011000000100000011001101000000010001000000000011100000000000010000001000110001000010000100010101100110010001100110111100110000001010110111101001101011001110001001000010000001011011110010100110001001010110000000000001101100011101001000010110010000101111001110111100010110000010110100111000100001010000101100001000001100101100010000101100001100000010110000001000101101000011111011010000101100100010101101000000110010001000000000100011010100010111110101011000101101110010111110010101101101110100100011000010000001011100000000010010010100011101011001010100110100100101001101001101010000001011100110110001100010011100010011010000000001110110000110010010011001000100011100000101010101000011010100100001100010001010110000001101000010100000100011110100000111000100100010010010010011010101000000011011001001100100000011010000010101000010010000001101100000101010011100000101101101011001010010010000010000111000010000110010010100101100000010010101110110111"
    },
    {
      "id": 228260302,
      "lang": "java",
      "time": "2\u00a0weeks, 3\u00a0days",
      "timestamp": 1557610238,
      "status_display": "Accepted",
      "runtime": "6 ms",
      "url": "/submissions/detail/228260302/",
      "is_pending": "Not Pending",
      "title": "ZigZag Conversion",
      "memory": "37.4 MB",
      "code": "class Solution {\n    public String convert(String s, int numRows) {\n        if(numRows == 1){\n            return s;\n        }\n        List<StringBuilder> list = new ArrayList<>();\n        for(int i=0;i<numRows;i++){\n            list.add(new StringBuilder());\n        }\n        \n        boolean goingDown = false;\n        int curRow = 0;\n        for(char c : s.toCharArray()){\n            list.get(curRow).append(c);\n            if(curRow == 0 || curRow ==numRows-1){\n                goingDown = !goingDown;\n            }\n            curRow += goingDown ? 1 : -1;\n        }\n        \n        StringBuilder result = new StringBuilder();\n        for(StringBuilder row: list){\n            result.append(row);\n        }\n        return result.toString();\n    }\n}",
      "compare_result
    },
    {
      "id": 228229031,
      "lang": "java",
      "time": "2\u00a0weeks, 3\u00a0days",
      "timestamp": 1557598059,
      "status_display": "Accepted",
      "runtime": "14 ms",
      "url": "/submissions/detail/228229031/",
      "is_pending": "Not Pending",
      "title": "Longest Palindromic Substring",
      "memory": "35 MB",
      "code": "class Solution {\n    public String longestPalindrome(String s) {\n        //Odd length palindrome\n        //Even length palindrome\n        if(s.length()==0){\n            return \"\";\n        }\n        int maxlen = 1;\n        int currLen = 0;\n        int pos = 0;\n        for(int i=1;i<s.length();i++){\n                int low = i-1;\n                int high = i;\n                while(low>=0 && high<s.length() && s.charAt(low) == s.charAt(high)){\n                    currLen = high-low+1;\n                    if(currLen > maxlen){\n                        maxlen = currLen;\n                        pos = low;\n                    }\n                    low--;\n                    high++;\n                }\n        }\n        for(int i=1;i<s.length();i++){\n                int low = i-1;\n                int high = i+1;\n                while(low>=0 && high<s.length() && s.charAt(low) == s.charAt(high)){\n                    currLen = high-low+1;\n                    if(currLen > maxlen){\n                        maxlen = currLen;\n                        pos = low;\n                    }\n                    low--;\n                    high++;\n                }\n        }\n        return s.substring(pos, pos+maxlen);\n    }\n}",
      "compare_result": "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    },
    {
      "id": 228228898,
      "lang": "java",
      "time": "2\u00a0weeks, 3\u00a0days",
      "timestamp": 1557598015,
      "status_display": "Wrong Answer",
      "runtime": "N/A",
      "url": "/submissions/detail/228228898/",
      "is_pending": "Not Pending",
      "title": "Longest Palindromic Substring",
      "memory": "N/A",
      "code": "class Solution {\n    public String longestPalindrome(String s) {\n        //Odd length palindrome\n        //Even length palindrome\n        if(s.length()==0){\n            return \"\";\n        }\n        int maxlen = 1;\n        int currLen = 0;\n        int pos = 0;\n        for(int i=1;i<s.length();i++){\n                int low = i-1;\n                int high = i+1;\n                while(low>=0 && high<s.length() && s.charAt(low) == s.charAt(high)){\n                    currLen = high-low+1;\n                    if(currLen > maxlen){\n                        maxlen = currLen;\n                        pos = low;\n                    }\n                    low--;\n                    high++;\n                }\n        }\n        for(int i=1;i<s.length();i++){\n                int low = i;\n                int high = i+1;\n                while(low>=0 && high<s.length() && s.charAt(low) == s.charAt(high)){\n                    currLen = high-low+1;\n                    if(currLen > maxlen){\n                        maxlen = currLen;\n                        pos = low;\n                    }\n                    low--;\n                    high++;\n                }\n        }\n        return s.substring(pos, pos+maxlen);\n    }\n}",
      "compare_result": "1111101101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    },
    {
      "id": 228225577,
      "lang": "java",
      "time": "2\u00a0weeks, 3\u00a0days",
      "timestamp": 1557596681,
      "status_display": "Accepted",
      "runtime": "8 ms",
      "url": "/submissions/detail/228225577/",
      "is_pending": "Not Pending",
      "title": "Longest Substring Without Repeating Characters",
      "memory": "36.4 MB",
      "code": "class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        Map<Character, Integer> map = new HashMap<>();\n        int j = 0;\n        int maxlen = 0;\n        for(int i=0;i<s.length();i++){\n            if(map.containsKey(s.charAt(i))){\n                j = Math.max(map.get(s.charAt(i)), j);\n            }\n            maxlen = Math.max(maxlen, i-j+1);\n            map.put(s.charAt(i), i+1);\n        }\n        return maxlen;\n    }\n}",
      "compare_result
    }
  ],
  "has_next": true,
  "last_key": "%7B%22pk%22%3A%20%7B%22N%22%3A%20%22228225577%22%7D%2C%20%22dt%22%3A%20%7B%22S%22%3A%20%222019-05-11T17%3A44%3A41.258815%2B0000%22%7D%2C%20%22sid%22%3A%20%7B%22N%22%3A%20%221538255%22%7D%7D"
}